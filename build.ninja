builddir = build
site = $builddir/site

rule cp
    description = Copy $in to build directory
    command = cp $in $out

rule svg2png
    description = Rendering $in to ${size}px
    command = convert -background none -resize ${size}x${size} -define png:exclude-chunks=date,time $in $out

rule svg2ico
    description = Render $in to .ico
    command = convert -background none -define 'icon:auto-resize=16,24,32,64,128,256' $in $out

build $site/index.html: cp src/index.html
build $site/manifest.json: cp src/manifest.json
build $site/css/style.css: cp src/css/style.css
build $site/icons/icon.svg: cp icon.svg
build $site/icons/512px.png: svg2png icon.svg
    size = 512
build $site/icons/256px.png: svg2png icon.svg
    size = 256
build $site/icons/128px.png: svg2png icon.svg
    size = 128
build $site/icons/64px.png: svg2png icon.svg
    size = 64
build $site/favicon.ico: svg2ico icon.svg
build $site/images/warning.svg: cp src/images/warning.svg

rule tsc
    description = Compile TypeScript to JavaScript
    command = tsc --build src/scripts/main

tscdir = $builddir/tsc
build $builddir/tsc/main/main.js $builddir/tsc/service-worker/worker.js: tsc src/scripts/main/main.ts src/scripts/service-worker/worker.ts | src/scripts/general-tsconfig.json src/scripts/main/tsconfig.json src/scripts/service-worker/tsconfig.json
build $site/scripts/main.js: cp $builddir/tsc/main/main.js
build $site/worker.js: cp $builddir/tsc/service-worker/worker.js

rule cargo
    description = Compile Rust to WASM
    command = cargo build --release --color=always --quiet && touch $out
    depfile = $builddir/wasm32-unknown-unknown/release/wasm.d
    deps = gcc

rule wasm-bindgen
    description = Generate WASM bindings
    command = wasm-bindgen --target web --out-dir $site/scripts/ $in

build $builddir/wasm32-unknown-unknown/release/wasm.wasm: cargo Cargo.toml
build $site/scripts/wasm_bg.wasm $site/scripts/wasm_bg.wasm.d.ts $site/scripts/wasm.d.ts $site/scripts/wasm.js: wasm-bindgen $builddir/wasm32-unknown-unknown/release/wasm.wasm
